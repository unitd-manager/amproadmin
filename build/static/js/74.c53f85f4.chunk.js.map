{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/userGroup/UserGroupButtons.js","views/EditData/UserGroupEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/DeleteButton.js","../node_modules/react-feather/dist/icons/trash-2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","UserGroupButtons","id","applyChanges","backToList","editUserGroupData","editRoomUserGroup","navigate","ComponentCardV2","color","onClick","setTimeout","window","confirm","DeleteButton","columnname","tablename","UserGroupEdit","useState","userGroupDetails","setUserGroupDetails","roomUser","setRoomUser","loggedInuser","React","useContext","AppContext","setUser","usePermify","useParams","useNavigate","handleInputs","e","target","name","value","getRoomUserGroup","api","post","user_group_id","then","res","data","apiData","permissionArray","forEach","element","edit","push","section_title","detail","duplicate","export","import","list","new","print","publish","remove","roles","permissions","catch","elem","handleOnChange","item","creationdatetime","checked","room_user_group_id","insertRoomUserGroup","useEffect","deleteUserGroupData","first_name","result","$","each","allValues","find","fieldName","attr","val","obj","md","onChange","user_group_type","defaultValue","map","cell","disabled","check","defaultChecked","unpublish","section_id","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","ifpiture","ifAttachment","pictureroom","attachmentroom","deletePicture","formalId","roomName","room_name","record_id","status","deleteRecord","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","idvalue","size","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","forwardRef","_ref","ref","_ref$color","_ref$size","rest","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/74.c53f85f4.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\nimport DeleteButton from '../DeleteButton';\r\n\r\nfunction UserGroupButtons({\r\n  id,\r\n  applyChanges,\r\n  backToList,\r\n  editUserGroupData,\r\n  editRoomUserGroup,\r\n  navigate,\r\n}) {\r\n  UserGroupButtons.propTypes = {\r\n    id: PropTypes.string,\r\n    applyChanges: PropTypes.func,\r\n    backToList: PropTypes.func,\r\n    editUserGroupData: PropTypes.func,\r\n    editRoomUserGroup: PropTypes.func,\r\n    navigate: PropTypes.any,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editUserGroupData();\r\n                    editRoomUserGroup();\r\n                    setTimeout(() => {\r\n                      navigate('/UserGroup');\r\n                    }, 300);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editUserGroupData();\r\n                    editRoomUserGroup();\r\n                    applyChanges();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    if (\r\n                      window.confirm(\r\n                        'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                      )\r\n                    ) {\r\n                      navigate('/UserGroup');\r\n                    } else {\r\n                      applyChanges();\r\n                    }\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <DeleteButton\r\n                  id={id}\r\n                  columnname=\"user_group_id\"\r\n                  tablename=\"user_group\"\r\n                ></DeleteButton>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    backToList();\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserGroupButtons;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, FormGroup, Label, Input, Form, Table } from 'reactstrap';\r\nimport * as $ from 'jquery';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { usePermify } from '@permify/react-role';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport message from '../../components/Message';\r\nimport UserGroupButtons from '../../components/userGroup/UserGroupButtons';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst UserGroupEdit = () => {\r\n  //state variables\r\n  const [userGroupDetails, setUserGroupDetails] = useState({});\r\n  const [roomUser, setRoomUser] = useState([]);\r\n  const { loggedInuser } = React.useContext(AppContext);\r\n  const { setUser } = usePermify();\r\n  //params and routing\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Route Change\r\n  const applyChanges = () => {};\r\n  const backToList = () => {\r\n    navigate('/UserGroup');\r\n  };\r\n\r\n  //Setting data in userGroupDetails\r\n  const handleInputs = (e) => {\r\n    setUserGroupDetails({ ...userGroupDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Product data By product id\r\n  const getUserGroupById = () => {\r\n    api\r\n      .post('/usergroup/getusergroupById', { user_group_id: id })\r\n      .then((res) => {\r\n        setUserGroupDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('userGroupDetails Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //get roomusergroup data by id\r\n  const getRoomUserGroup = () => {\r\n    api\r\n      .post('/usergroup/getroomusergroupById', { user_group_id: id })\r\n      .then((res) => {\r\n        setRoomUser(res.data.data);\r\n        if (id === loggedInuser.user_group_id) {\r\n          const apiData = res.data.data;\r\n          const permissionArray = [];\r\n          apiData.forEach((element) => {\r\n            if (element.edit) permissionArray.push(`${element.section_title}-edit`);\r\n            if (element.detail) permissionArray.push(`${element.section_title}-detail`);\r\n            if (element.duplicate) permissionArray.push(`${element.section_title}-duplicate`);\r\n            if (element.export) permissionArray.push(`${element.section_title}-export`);\r\n            if (element.import) permissionArray.push(`${element.section_title}-import`);\r\n            if (element.list) permissionArray.push(`${element.section_title}-list`);\r\n            if (element.new) permissionArray.push(`${element.section_title}-new`);\r\n            if (element.print) permissionArray.push(`${element.section_title}-print`);\r\n            if (element.publish) permissionArray.push(`${element.section_title}-publish`);\r\n            if (element.remove) permissionArray.push(`${element.section_title}-remove`);\r\n          });\r\n          setUser({\r\n            id: '1',\r\n            roles: ['admin'],\r\n            permissions: permissionArray,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Unable to get room user record.', 'error');\r\n      });\r\n  };\r\n  //update room user\r\n  const editRoomUserGroup = (elem) => {\r\n    api\r\n      .post('/usergroup/edit-roomusergroup', elem)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n        getRoomUserGroup();\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //update userGroup\r\n  const editUserGroupData = () => {\r\n    userGroupDetails.modification_date = creationdatetime;\r\n    userGroupDetails.modified_by = loggedInuser.first_name;\r\n    api\r\n      .post('/usergroup/edit-usergroup', userGroupDetails)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //insert userGroup\r\n  const insertRoomUserGroup = (item) => {\r\n    api\r\n      .post('/usergroup/insertRoomUserGroup', item)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n        getRoomUserGroup();\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  //Api call for Deleting UserGroup Data\r\n  const deleteUserGroupData = () => {\r\n    api\r\n      .post('/usergroup/deleteUserGroup', { user_group_id: id })\r\n      .then(() => {\r\n        message('Record deleted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n  const handleOnChange = (e, item) => {\r\n    item = { ...item, modification_date: creationdatetime };\r\n    item = { ...item, [e.target.name]: e.target.checked === true ? 1 : 0 };\r\n    if (item.room_user_group_id) {\r\n      editRoomUserGroup(item);\r\n    } else {\r\n      item = { ...item, user_group_id: id };\r\n      insertRoomUserGroup(item);\r\n    }\r\n  };\r\n  const getAllValues = () => {\r\n    const result = [];\r\n    $('#example tbody tr').each(() => {\r\n      const allValues = {};\r\n      $(this)\r\n        .find('input')\r\n        .each(() => {\r\n          const fieldName = $(this).attr('name');\r\n          allValues.user_group_id = id;\r\n          allValues[fieldName] = $(this).val();\r\n        });\r\n\r\n      result.push(allValues);\r\n    });\r\n    result.forEach((obj) => {\r\n      editRoomUserGroup(obj);\r\n    });\r\n  };\r\n\r\n  const accessColumns = [\r\n    {\r\n      name: 'room name',\r\n    },\r\n\r\n    {\r\n      name: 'list',\r\n    },\r\n    {\r\n      name: 'detail',\r\n    },\r\n    {\r\n      name: 'new',\r\n    },\r\n    {\r\n      name: 'edit',\r\n    },\r\n    {\r\n      name: 'delete',\r\n    },\r\n    {\r\n      name: 'publish',\r\n    },\r\n    {\r\n      name: 'un-publish',\r\n    },\r\n    {\r\n      name: 'print',\r\n    },\r\n    {\r\n      name: 'import',\r\n    },\r\n    {\r\n      name: 'export',\r\n    },\r\n  ];\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getUserGroupById();\r\n    getRoomUserGroup();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MainDiv\">\r\n        <div className=\"\">\r\n          <ToastContainer></ToastContainer>\r\n          <Row>\r\n            <BreadCrumbs heading={userGroupDetails && userGroupDetails.title} />\r\n            <UserGroupButtons\r\n              id={id}\r\n              applyChanges={applyChanges}\r\n              backToList={backToList}\r\n              deleteUserGroupData={deleteUserGroupData}\r\n              editUserGroupData={editUserGroupData}\r\n              editRoomUserGroup={getAllValues}\r\n              navigate={navigate}\r\n            />\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"UserGroup Details\" creationModificationDate={userGroupDetails}>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Title</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={userGroupDetails && userGroupDetails.title}\r\n                          onChange={handleInputs}\r\n                          name=\"title\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>UserGroup Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          value={userGroupDetails && userGroupDetails.user_group_type}\r\n                          onChange={handleInputs}\r\n                          name=\"user_group_type\"\r\n                        >\r\n                          <option value=\"Super Administrator\" defaultValue=\"selected\">\r\n                            Super Administrator\r\n                          </option>\r\n                          <option value=\"Administrator\">Administrator</option>\r\n                          <option value=\"User\">User</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n          </Row>\r\n\r\n          <ComponentCard title=\"Actions\">\r\n            <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n              <thead>\r\n                <tr>\r\n                  {accessColumns.map((cell) => {\r\n                    return <td key={cell.name}>{cell.name}</td>;\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr className=\"w-100 bg-primary text-white\">\r\n                  <td>Modules</td>\r\n                </tr>\r\n              </tbody>\r\n              <tbody>\r\n                {roomUser &&\r\n                  roomUser.map((element) => {\r\n                    return (\r\n                      <tr key={element.section_id}>\r\n                        <td>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"section_title\"\r\n                            value={element.section_title}\r\n                            disabled\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"list\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.list}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"detail\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.detail}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"new\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.new}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"edit\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.edit}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"remove\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.remove}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"publish\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.publish}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"unpublish\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.unpublish}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"print\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.print}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"import\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.import}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"export\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.export}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n              <tbody>\r\n                <tr className=\"bg-primary text-white w-100\">\r\n                  <td>Reports / Widgets</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </ComponentCard>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserGroupEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport api from '../constants/api';\r\nimport message from './Message';\r\n\r\nconst DeleteButton = ({\r\n  id,\r\n  columnname,\r\n  tablename,\r\n  ifpiture = false,\r\n  ifAttachment = false,\r\n  pictureroom,\r\n  attachmentroom,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  DeleteButton.propTypes = {\r\n    id: PropTypes.string,\r\n    columnname: PropTypes.string,\r\n    tablename: PropTypes.string,\r\n    ifpiture: PropTypes.bool,\r\n    ifAttachment: PropTypes.bool,\r\n    pictureroom: PropTypes.string,\r\n    attachmentroom: PropTypes.string,\r\n    //onSuccess:PropTypes.any\r\n  };\r\n  const deletePicture = (formalId, roomName) => {\r\n    api\r\n      .post('/file/deleteFileByRoomNameAndId', {\r\n        room_name: roomName,\r\n        record_id: formalId,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n         \r\n            message('Media and Records files deleted.', 'error');\r\n            navigate(-1);\r\n          \r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n  const deleteApi = () => {\r\n    api\r\n      .post('/commonApi/deleteRecord', {\r\n        idvalue: id,\r\n        columnname,\r\n        tablename,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          if (ifpiture) {\r\n            deletePicture(id, pictureroom);\r\n          } else {\r\n            /* eslint-disable */\r\n            if (ifAttachment) {\r\n              deletePicture(id, attachmentroom);\r\n            } else {\r\n              message('Record deleted successfully.');\r\n              navigate(-1);\r\n            }\r\n          }\r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteApi();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color=\"danger\"\r\n      onClick={() => {\r\n        deleteRecord();\r\n      }}\r\n    >\r\n      Delete <Icon.Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;"],"sourceRoot":""}