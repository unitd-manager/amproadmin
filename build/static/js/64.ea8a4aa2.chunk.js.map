{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/CategoryDetailComp.js","views/EditData/CategoryEdit.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CategoryButton","editCategoryData","applyChanges","saveChanges","backToList","navigate","useNavigate","ComponentCardV2","color","onClick","setTimeout","console","log","CategoryDetailComp","categoryDetails","handleInputs","section","valuelist","ComponentCard","title","creationModificationDate","md","onChange","value","category_title","name","section_id","defaultValue","map","e","section_title","category_type","internal_link","defaultChecked","published","meta_title","meta_description","meta_keyword","seo_title","CategoryEdit","useState","setCategoryDetails","setSection","setValuelist","attachmentModal","setAttachmentModal","modelType","attachmentData","setDataForAttachment","id","useParams","loggedInuser","useContext","AppContext","useEffect","api","post","category_id","then","res","data","catch","get","modification_date","creationdatetime","modified_by","first_name","deleteCategoryData","target","xs","AttachmentModalV2","moduleId","roomName","altTagData","desc","ViewFileComponentV2","CreationModification","details","style","fontSize","created_by","creation_date","children","subtitle","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","fileTypes","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","fiels","arrayOfObj","Object","entries","types","role","width","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","window","reload","uploadFile","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed"],"mappings":"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","file":"static/js/64.ea8a4aa2.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function CategoryButton({\r\n  editCategoryData,\r\n  // navigate,\r\n  applyChanges,\r\n  saveChanges,\r\n  // id,\r\n  backToList,\r\n}) {\r\n  CategoryButton.propTypes = {\r\n    editCategoryData: PropTypes.any,\r\n    // navigate: PropTypes.func,\r\n    applyChanges: PropTypes.func,\r\n    saveChanges: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    backToList: PropTypes.func,\r\n  };\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"shadow-none\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  saveChanges();\r\n                  setTimeout(() => {\r\n                    navigate('/Category');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  applyChanges();\r\n                  console.log('cancel process');\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"shadow-none\"\r\n                color=\"dark\"\r\n                onClick={(e) => {\r\n                  if (window.confirm('Are you sure you want to cancel? ')) {\r\n                    navigate('/Category');\r\n                  } else {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"category_id\"\r\n              tablename=\"category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function CategoryDetailComp({ categoryDetails, handleInputs, section, valuelist }) {\r\n  CategoryDetailComp.propTypes = {\r\n    categoryDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    section: PropTypes.array,\r\n    valuelist: PropTypes.array,\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n        <ComponentCard title=\"Category Details\"\r\n         creationModificationDate={categoryDetails}>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Title <span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_title}\r\n                    name=\"category_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Section</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.section_id}\r\n                    name=\"section_id\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {section &&\r\n                      section.map((e) => {\r\n                        return <option key={e.section_id} value={e.section_id}>{e.section_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Category Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_type}\r\n                    name=\"category_type\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {valuelist &&\r\n                      valuelist.map((e) => {\r\n                        return <option key={e.value} value={e.value}>{e.value}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Internal Link</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={categoryDetails && categoryDetails.internal_link}\r\n                    onChange={handleInputs}\r\n                    name=\"internal_link\"\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                \r\n                <Label>Published</Label>\r\n                <br></br>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"1\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 1 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label> Yes </Label>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"0\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 0 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label>No</Label>\r\n                \r\n              </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <ComponentCard title=\"Page Meta Data\">\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Title</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_title}\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_title\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Description</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_description}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_description\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Keywords</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_keyword}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_keyword\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n        <FormGroup>\r\n          <Label>SEO Title</Label>\r\n          <Input\r\n            value={categoryDetails && categoryDetails.seo_title}\r\n            type=\"text\"\r\n            onChange={handleInputs}\r\n            name=\"seo_title\"\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <Row></Row>\r\n        </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Button, Col, Form, FormGroup, Row } from 'reactstrap';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [categoryDetails, setCategoryDetails] = useState();\r\n  const [section, setSection] = useState();\r\n  const [valuelist, setValuelist] = useState();\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  //Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n    console.log('inside DataForAttachment');\r\n  };\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/Category');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Category');\r\n  };\r\n\r\n  //Api call for getting section dropdown\r\n  const getSection = () => {\r\n    api\r\n      .get('/category/getSectionTitle')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Section not found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/category/get-ValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/category/getCategoryById', { category_id: id })\r\n      .then((res) => {\r\n        setCategoryDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Category Edit function\r\n  const editCategoryData = () => {\r\n    categoryDetails.modification_date = creationdatetime;\r\n    categoryDetails.modified_by = loggedInuser.first_name;\r\n    if (categoryDetails.category_title !== '') {\r\n      api\r\n        .post('/category/editCategory', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Delete Category Function\r\n  const deleteCategoryData = () => {\r\n    api\r\n      .post('/category/deleteCategory', { category_id: id })\r\n      .then(() => {\r\n        message('Record deteled successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    CategoryById();\r\n    getSection();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <CategoryButton\r\n        editCategoryData={editCategoryData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        deleteCategoryData={deleteCategoryData}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></CategoryButton>\r\n\r\n      {/* More details*/}\r\n      <CategoryDetailComp\r\n        categoryDetails={categoryDetails}\r\n        handleInputs={handleInputs}\r\n        section={section}\r\n        valuelist={valuelist}\r\n      ></CategoryDetailComp>\r\n\r\n<Form>\r\n        <FormGroup>\r\n          <ComponentCard title=\"Attachments\">\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    dataForAttachment();\r\n                    setAttachmentModal(true);\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <AttachmentModalV2\r\n              moduleId={id}\r\n              roomName=\"Category\"\r\n              altTagData=\"Category Data\"\r\n              desc=\"Category Data\"\r\n              modelType={attachmentData.modelType}\r\n              attachmentModal={attachmentModal}\r\n              setAttachmentModal={setAttachmentModal}\r\n            />\r\n            <ViewFileComponentV2 moduleId={id} roomName=\"Category\" />\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://foodecom.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n"],"sourceRoot":""}