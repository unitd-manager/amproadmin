{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/StaffTable/KeyStaffDetails.js","components/StaffTable/KeyStaffAddress.js","components/StaffTable/StaffButton.js","views/EditData/StaffEdit.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","../node_modules/react-feather/dist/icons/image.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","KeyStaffDetails","stafftypedetails","staffeditdetails","handleInputs","userdetails","staffteamdetails","ComponentCard","title","creationModificationDate","md","onChange","value","first_name","name","email","pass_word","status","defaultValue","user_group_id","map","ele","team","staff_type","staff_rate","checked","published","KeyStaffAddress","allCountries","address_street","address_town","address_state","address_country","country","country_code","StaffButton","applyChanges","backToList","editStaffData","navigate","ComponentCardV2","color","onClick","setTimeout","window","confirm","StaffEdit","useState","setStaffEditDetails","setStaffTypetDetails","setStaffTeamDetails","setUserDetails","RoomName","setRoomName","fileTypes","setFileTypes","attachmentModal","setAttachmentModal","setallCountries","modelType","pictureData","setDataForPicture","id","useParams","useNavigate","loggedInuser","useContext","AppContext","e","target","editStaffById","api","post","staff_id","then","res","resObj","data","catch","useEffect","get","saveChanges","test","reload","modification_date","creationdatetime","modified_by","deleteStaffData","xs","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","ViewFileComponentV2","CreationModification","details","style","fontSize","created_by","creation_date","children","subtitle","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","fiels","arrayOfObj","Object","entries","console","log","types","role","FormData","forEach","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/62.5c78eb97.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function KeyStaffDetails({\r\n  stafftypedetails,\r\n  staffeditdetails,\r\n  handleInputs,\r\n  userdetails,\r\n  staffteamdetails,\r\n}) {\r\n  KeyStaffDetails.propTypes = {\r\n    staffeditdetails: PropTypes.any,\r\n    handleInputs: PropTypes.func,\r\n    userdetails: PropTypes.array,\r\n    staffteamdetails: PropTypes.array,\r\n    stafftypedetails: PropTypes.array,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n      <ComponentCard\r\n            title=\"Staff Details\"\r\n            creationModificationDate={staffeditdetails}\r\n          \r\n          > \r\n          <Row>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Name <span className=\"required\"> *</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.first_name}\r\n                  name=\"first_name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Email <span className=\"required\"> *</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.email}\r\n                  name=\"email\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.pass_word}\r\n                  name=\"pass_word\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Status</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"status\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.status}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  <option defaultValue=\"Current\">\r\n                    Current\r\n                  </option>\r\n                  <option value=\"Archive\">Archive</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>User Group</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"user_group_id\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.user_group_id}\r\n                >\r\n                  <option defaultValue=\"selected\">\r\n                    Please Select\r\n                  </option>\r\n                  {userdetails &&\r\n                    userdetails.map((ele) => {\r\n                      return <option key={ele.user_group_id} value={ele.user_group_id}>{ele.title}</option>;\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Staff Team</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"team\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.team}\r\n                >\r\n                  <option defaultValue=\"selected\">\r\n                    Please Select\r\n                  </option>\r\n                  {staffteamdetails &&\r\n                    staffteamdetails.map((ele) => {\r\n                      return <option key={ele.value} value={ele.value}>{ele.value}</option>;\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Staff Type</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"staff_type\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.staff_type}\r\n                >\r\n                  <option defaultValue=\"selected\">\r\n                    Please Select\r\n                  </option>\r\n                  {stafftypedetails &&\r\n                    stafftypedetails.map((ele) => {\r\n                      return <option key={ele.value} value={ele.value}>{ele.value}</option>;\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Staff Rate</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.staff_rate}\r\n                  name=\"staff_rate\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <FormGroup>\r\n                <Label>Position</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.position}\r\n                  name=\"position\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Published</Label>\r\n                  <br></br>\r\n                  <Label>Yes</Label>\r\n                  <Input name=\"published\" value=\"1\" type=\"radio\" checked={staffeditdetails && staffeditdetails.published === 1 && true} onChange={handleInputs}/>\r\n                  <Label>No</Label>\r\n                  <Input name=\"published\" value=\"0\" type=\"radio\" checked={staffeditdetails && staffeditdetails.published === 0 && true} onChange={handleInputs}/>\r\n                </FormGroup>\r\n              </Col>\r\n            \r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function KeyStaffAddress({ staffeditdetails, handleInputs, allCountries }) {\r\n  KeyStaffAddress.propTypes = {\r\n    staffeditdetails: PropTypes.any,\r\n    handleInputs: PropTypes.func,\r\n    allCountries: PropTypes.array,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCard title=\"Address\">\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Street Address</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.address_street}\r\n                  name=\"address_street\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Town/Suburb</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.address_town}\r\n                  name=\"address_town\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>State</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.address_state}\r\n                  name=\"address_state\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Country</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"address_country\"\r\n                  onChange={handleInputs}\r\n                  value={staffeditdetails && staffeditdetails.address_country}\r\n                >\r\n                  <option defaultValue=\"selected\" >\r\n                    Please Select\r\n                  </option>\r\n                  {allCountries &&\r\n                    allCountries.map((country) => (\r\n                      <option key={country.country_code} value={country.country_code}>{country.name}</option>\r\n                    ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCard>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n\r\nexport default function StaffButton({\r\n \r\n  applyChanges,\r\n  backToList,\r\n  editStaffData,\r\n  navigate,\r\n}) {\r\n  StaffButton.propTypes = {\r\n   \r\n    applyChanges: PropTypes.func,\r\n    backToList: PropTypes.func,\r\n    editStaffData: PropTypes.func,\r\n    navigate: PropTypes.any,\r\n  };\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editStaffData();\r\n                  setTimeout(() => {\r\n                    navigate('/Staff');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editStaffData();\r\n                  applyChanges();\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  if (\r\n                    window.confirm(\r\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                    )\r\n                  ) {\r\n                    navigate('/Staff');\r\n                  } else {\r\n                    applyChanges();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button  className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport * as Icon from 'react-feather';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport KeyStaffDetails from '../../components/StaffTable/KeyStaffDetails';\r\nimport KeyStaffAddress from '../../components/StaffTable/KeyStaffAddress';\r\nimport StaffButton from '../../components/StaffTable/StaffButton';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst StaffEdit = () => {\r\n  // All state variables\r\n  const [staffeditdetails, setStaffEditDetails] = useState('');\r\n  const [stafftypedetails, setStaffTypetDetails] = useState();\r\n  const [staffteamdetails, setStaffTeamDetails] = useState();\r\n  const [userdetails, setUserDetails] = useState();\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [allCountries, setallCountries] = useState([]);\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  //All Functions/Methods\r\n\r\n  //Setting Data in Staff Details\r\n  const handleInputs = (e) => {\r\n    setStaffEditDetails({ ...staffeditdetails, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  //Setting Picture Data\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n\r\n  // Route Change\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (!staffeditdetails.email) {\r\n      message('Email is required', 'warning');\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(staffeditdetails.email)) {\r\n      message('Enter valid email', 'warning');\r\n    } else if (staffeditdetails.email !== '' && staffeditdetails.first_name !== '') {\r\n      navigate('/Staff');\r\n    }\r\n    window.location.reload();\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Staff');\r\n  };\r\n\r\n  //Api call for getting Staff Data By ID\r\n  const editStaffById = () => {\r\n    api\r\n      .post('/staff/getStaffById', { staff_id: id })\r\n      .then((res) => {\r\n        const resObj = res.data.data;\r\n        if (!resObj.status) {\r\n          resObj.status = 'Current';\r\n        }\r\n        if (!resObj.user_group_id) {\r\n          resObj.user_group_id = '1';\r\n        }\r\n        setStaffEditDetails(resObj);\r\n      })\r\n      .catch(() => {\r\n        message('Staff Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for Editing Staff Details\r\n\r\n  const editStaffData = () => {\r\n    staffeditdetails.modification_date = creationdatetime;\r\n    staffeditdetails.modified_by = loggedInuser.first_name;\r\n    if (!staffeditdetails.email) {\r\n      message('Email is required', 'warning');\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(staffeditdetails.email)) {\r\n      message('Enter valid email', 'warning');\r\n    } else if (staffeditdetails.email !== '' && staffeditdetails.first_name !== '') {\r\n      api.post('/staff/editStaff', staffeditdetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n          editStaffById();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Api call for getting Staff Type From Valuelist\r\n  const getStaffType = () => {\r\n    api\r\n      .get('/staff/getStaffTypeFromValueList')\r\n      .then((res) => {\r\n        setStaffTypetDetails(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Staff Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting Staff Team From Valuelist\r\n  const getStaffTeam = () => {\r\n    api\r\n      .get('/staff/getStaffTeamFromValueList')\r\n      .then((res) => {\r\n        setStaffTeamDetails(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Staff Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting User Group Data\r\n  const getUserGroup = () => {\r\n    api\r\n      .get('/staff/getUserGroup')\r\n      .then((res) => {\r\n        setUserDetails(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Staff Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for Deleting Staff Data\r\n  const deleteStaffData = () => {\r\n    api\r\n      .post('/staff/deleteStaff', { staff_id: id })\r\n      .then(() => {\r\n        message('Record editted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //Api for getting all countries\r\n  const getAllCountries = () => {\r\n    api\r\n      .get('/staff/getCountry')\r\n      .then((res) => {\r\n        setallCountries(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Country Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStaffType();\r\n    getStaffTeam();\r\n    getUserGroup();\r\n    editStaffById();\r\n    getAllCountries();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer />\r\n\r\n      {/* Staff Edit Buttons */}\r\n      <StaffButton\r\n        navigate={navigate}\r\n        saveChanges={saveChanges}\r\n        applyChanges={applyChanges}\r\n        backToList={backToList}\r\n        editStaffData={editStaffData}\r\n        deleteStaffData={deleteStaffData}\r\n        id={id}\r\n      ></StaffButton>\r\n\r\n      {/* KeyStaffDetails */}\r\n      <KeyStaffDetails\r\n        stafftypedetails={stafftypedetails}\r\n        staffeditdetails={staffeditdetails}\r\n        handleInputs={handleInputs}\r\n        userdetails={userdetails}\r\n        staffteamdetails={staffteamdetails}\r\n      ></KeyStaffDetails>\r\n\r\n      {/* KeyStaffAddress */}\r\n      <KeyStaffAddress\r\n        staffeditdetails={staffeditdetails}\r\n        handleInputs={handleInputs}\r\n        allCountries={allCountries}\r\n      ></KeyStaffAddress>\r\n\r\n      {/* Picture Attachment */}\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCard title=\"Picture\">\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                <Button\r\n                  className=\"shadow-none\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setRoomName('StaffPic');\r\n                    setFileTypes(['JPG', 'JPEG', 'PNG', 'GIF']);\r\n                    dataForPicture();\r\n                    setAttachmentModal(true);\r\n                  }}\r\n                >\r\n                  <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <AttachmentModalV2\r\n              moduleId={id}\r\n              attachmentModal={attachmentModal}\r\n              setAttachmentModal={setAttachmentModal}\r\n              roomName={RoomName}\r\n              fileTypes={fileTypes}\r\n              altTagData=\"Staff Data\"\r\n              desc=\"Staff Data\"\r\n              recordType=\"Picture\"\r\n              mediaType={pictureData.modelType}\r\n            />\r\n            <ViewFileComponentV2 moduleId={id} roomName=\"StaffPic\" recordType=\"Picture\" />\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffEdit;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://foodecom.unitdtechnologies.com/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;"],"sourceRoot":""}