{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/StaffDetails.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","StaffDetails","React","useState","email","first_name","creation_date","moment","staffdetails","setStaffDetails","navigate","useNavigate","handleInputs","e","target","name","value","loggedInuser","useContext","AppContext","md","xs","title","type","onChange","color","onClick","creationdatetime","created_by","test","api","post","then","res","insertedDataId","data","insertId","message","setTimeout","catch","window","confirm","preventDefault","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","style","fontSize","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","format"],"mappings":"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","file":"static/js/96.0515cd6f.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useContext } from 'react';\r\nimport { Row, Col, FormGroup, Label, Button, Input } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst StaffDetails = () => {\r\n  // All state variables\r\n\r\n  const [staffdetails, setStaffDetails] = React.useState({ email: '', first_name: '', creation_date: moment(), });\r\n\r\n  // Navigation and Parameter Constants\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //All Functions/Methods\r\n\r\n  //Setting Data in Staff Details\r\n  const handleInputs = (e) => {\r\n    setStaffDetails({ ...staffdetails, [e.target.name]: e.target.value });\r\n  };\r\n  const { loggedInuser } = useContext(AppContext);\r\n\r\n  //Api call for Insert Staff Data\r\n  const insertStaffData = () => {\r\n    staffdetails.creation_date = creationdatetime;\r\n    staffdetails.created_by = loggedInuser.first_name;\r\n\r\n    if (!staffdetails.email) {\r\n      message('Email is required', 'warning');\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(staffdetails.email)) {\r\n      message('Invalid email address', 'warning');\r\n    } else if (staffdetails.email !== '' && staffdetails.first_name !== '') {\r\n      api\r\n        .post('/staff/insertStaff', staffdetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Staff Details inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/StaffEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('please fill all fields.', 'warning');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col md=\"6\" xs=\"12\">\r\n          <ComponentCard title=\"key Details\">\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <Label>\r\n                    Name<span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input type=\"text\" onChange={handleInputs} name=\"first_name\" />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <Label>\r\n                    Email<span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    onChange={handleInputs}\r\n                    value={staffdetails && staffdetails.email}\r\n                    name=\"email\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    className=\"btn mr-2 shadow-none\"\r\n                    onClick={() => {\r\n                      insertStaffData();\r\n                    }}\r\n                  >\r\n                    Save & Continue\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark shadow-none\"\r\n                    onClick={(e) => {\r\n                      if (window.confirm('Are you sure you want to cancel? ')) {\r\n                        navigate('/Staff');\r\n                      } else {\r\n                        e.preventDefault();\r\n                      }\r\n                    }}\r\n                  >\r\n                    Go to List\r\n                  </Button>\r\n                </div>\r\n              </Row>\r\n            </FormGroup>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}